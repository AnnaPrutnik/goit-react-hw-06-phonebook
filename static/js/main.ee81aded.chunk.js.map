{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Forms/Form.js","components/UserList/UserItem.js","components/UserList/UsersList.js","components/Section/Section.js","components/Forms/Filter.js","Pages/ContactPage.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getItems","state","contact","items","getFilter","filter","getFilteredContacts","contacts","normaliezedFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handlerChange","target","value","onSubmit","e","preventDefault","normalizedContactName","find","checkDoubleContact","alert","onAddContacts","className","htmlFor","type","onChange","autoComplete","pattern","title","required","UserItem","user","onClick","UserList","users","map","Section","children","Filter","ContactPage","filteredContacts","App","itemReducer","createReducer","filterReducer","_","contactReducer","combineReducers","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","newStore","persistore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.ee81aded.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nexport const addContact = createAction('contact/add', (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nexport const deleteContact = createAction('contact/delete');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","export const getItems = state => state.contact.items;\nexport const getFilter = state => state.contact.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n  const normaliezedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normaliezedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\nimport { getItems } from '../../redux/phonebook/phonebook-selectors';\nimport './Forms.scss';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const onAddContacts = (name, number) => dispatch(addContact(name, number));\n\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkDoubleContact = () => {\n    const normalizedContactName = name.toLowerCase();\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedContactName,\n    );\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const double = checkDoubleContact();\n    if (double) {\n      alert(`Contact with name ${name} already exist`);\n      return;\n    }\n    onAddContacts(name, number);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handlerSubmit} className=\"form\">\n      <div className=\"wrapper\">\n        <label htmlFor=\"name\" className=\"label\">\n          Name\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"input\"\n            onChange={handlerChange}\n            autoComplete=\"off\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor=\"number\" className=\"label\">\n          Number\n          <input\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            className=\"input\"\n            autoComplete=\"off\"\n            onChange={handlerChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport './User.scss';\n\nfunction UserItem({ user }) {\n  const dispatch = useDispatch();\n  const onDeleteContact = e => dispatch(deleteContact(e.target.id));\n\n  const { id, name, number } = user;\n\n  return (\n    <li className=\"item\">\n      <span>\n        {name}: {number}\n      </span>\n      <button id={id} type=\"button\" onClick={onDeleteContact} className=\"btn\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nUserItem.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default UserItem;\n","// import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport UserItem from './UserItem';\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\n\nimport './User.scss';\n\nfunction UserList() {\n  const users = useSelector(getFilteredContacts);\n\n  return (\n    <ul className=\"list\">\n      {users.map(user => (\n        <UserItem key={user.id} user={user} />\n      ))}\n    </ul>\n  );\n}\n\nexport default UserList;\n","import PropTypes from 'prop-types';\nimport './Section.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      {title && <h2 className=\"title\">{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport './Forms.scss';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const omChangeFilter = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label htmlFor=\"filter\" className=\"label filterLabel\">\n      Find contacts by name\n      <input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={filter}\n        onChange={omChangeFilter}\n        className=\"input filterInput\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\n\nimport Form from '../components/Forms/Form';\nimport UserList from '../components/UserList/UsersList';\nimport Section from '../components/Section/Section';\nimport Filter from '../components/Forms/Filter';\nimport { getFilteredContacts } from '../redux/phonebook/phonebook-selectors';\n\nfunction ContactPage() {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <Section>\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <UserList users={filteredContacts} />\n      </Section>\n    </div>\n  );\n}\n\nexport default ContactPage;\n","import './App.css';\nimport ContactPage from './Pages/ContactPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContactPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\n\nconst itemReducer = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n});\n\nexport default contactReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactReducer from './phonebook/phonebook-reducer';\n\nconst contactPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contact: persistReducer(contactPersistConfig, contactReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistore = persistStore(store);\n\nconst newStore = { store, persistore };\n\nexport default newStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport newStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={newStore.store}>\n      <PersistGate loading={null} persistor={newStore.persistore}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}